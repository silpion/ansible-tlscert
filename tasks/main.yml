---
- name: Assert platform is supported
  tags: ssl-certificates
  assert:
    that:
      - ansible_os_family in ssl_certificates_supported_platforms

- include_vars: "{{ ansible_os_family }}.yml"
  tags: ssl-certificates


- name: Update apt package cache
  tags: ssl-certificates
  sudo: yes
  when: ansible_os_family == 'Debian'
  apt:
    update_cache=yes
    cache_valid_time=3600


- name: Ensure default directories
  tags: ssl-certificates
  sudo: yes
  with_items:
    - { dir: "{{ ssl_certificates_cnf_path }}", mode: 700, owner: 0, group: 0 }
    - { dir: "{{ ssl_certificates_crt_path }}", mode: 755, owner: 0, group: 0 }
    - { dir: "{{ ssl_certificates_key_path }}", mode: 700, owner: 0, group: 0 }
  file:
    state=directory
    dest={{ item.dir }}
    mode={{ item.mode }}
    owner={{ item.owner }}
    group={{ item.group }}


- name: Install Ansible facts.d directory
  tags: ssl-certificates
  sudo: yes
  file:
    state=directory
    owner=0
    group=0
    mode=0755
    dest=/etc/ansible/facts.d

- name: Install ssl-certificates facts
  tags: ssl-certificates
  sudo: yes
  template:
    src=facts.j2
    dest=/etc/ansible/facts.d/ssl-certificates.fact
    owner=0
    group=0
    mode=0644

- name: Re-read facts
  tags: ssl-certificates
  setup:
    filter=ansible_local


- name: Install required packages
  tags: ssl-certificates
  sudo: yes
  with_items: ssl_certificates_package_list
  action: "{{ ansible_pkg_mgr }} state=installed name={{ item }}"


- name: Create openssl.cnf for certificates
  tags: ssl-certificates
  sudo: yes
  with_items: ssl_certificates_create
  template:
    src=openssl.cnf.j2
    dest={{ ssl_certificates_cnf_path }}/{{ item.name }}-openssl.cnf

- name: Create self-signed SSL certificates
  tags: ssl-certificates
  sudo: yes
  with_items: ssl_certificates_create
  command:
    openssl req
      -newkey "rsa:{{ item.bits|default(ssl_certificates_openssl_default_bits) }}"
      -nodes
      -x509
      -days {{ item.days|default(ssl_certificates_openssl_default_days) }}
      -keyout {{ item.key|default(ssl_certificates_key_path + "/" + item.name + ".pem") }}
      -out {{ item.crt|default(ssl_certificates_crt_path + "/" + item.name + ".crt") }}
      -config {{ ssl_certificates_cnf_path }}/{{ item.name }}-openssl.cnf
    creates={{ ssl_certificates_crt_path }}/{{ item.name }}.crt


- name: Install SSL certificates
  tags: ssl-certificates
  sudo: yes
  with_items: ssl_certificates_install
  copy:
    src=files/{{ item.name }}.crt
    dest={{ ssl_certificates_crt_path }}/{{ item.name }}.crt
    owner=0
    group=0
    mode=0644

- name: Install SSL certificate keys
  tags: ssl-certificates
  sudo: yes
  with_items: ssl_certificates_install
  copy:
    src=files/{{ item.name }}.key
    dest={{ ssl_certificates_key_path }}/{{ item.name }}.pem
    owner=0
    group=0
    mode=0600
