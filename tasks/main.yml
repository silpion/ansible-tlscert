---
- name: Assert platform is supported
  tags: ssl-certificates
  assert:
    that:
      - ansible_os_family in ['Debian', 'RedHat']

- include_vars: "{{ ansible_os_family }}.yml"
  tags: ssl-certificates


- name: Update apt package cache
  tags: ssl-certificates
  when: ansible_os_family == 'Debian'
  apt:
    update_cache=yes
    cache_valid_time=3600


- name: Ensure default directories
  tags: ssl-certificates
  with_items:
    - { dir: /etc/ssl/cnf, mode: 700, owner: 0, group: 0 }
    - { dir: /etc/ssl/certs, mode: 755, owner: 0, group: 0 }
    - { dir: /etc/ssl/private, mode: 700, owner: 0, group: 0 }
  file:
    state=directory
    dest={{ item.dir }}
    mode={{ item.mode }}
    owner={{ item.owner }}
    group={{ item.group }}


- name: Install required packages
  tags: ssl-certificates
  with_items: ssl_certificates_package_list
  action: "{{ ansible_pkg_mgr }} state=installed name={{ item }}"


- name: Create self-signed certificates OpenSSL configuration files
  tags: ssl-certificates
  with_items: ssl_certificates_create
  template:
    src=openssl.cnf.j2
    dest=/etc/ssl/cnf/{{ item.name }}-openssl.cnf


- name: Create self-signed certificates
  tags: ssl-certificates
  with_items: ssl_certificates_create
  command:
    openssl req
      -newkey rsa:{% if item.bits is defined %}{{ item.bits }}{% else %}{{ ssl_certificates_openssl_default_bits }}{% endif %}
      -nodes
      -x509
      -days {% if item.days is defined %}{{ item.days }}{% else %}{{ ssl_certificates_openssl_default_days }}{% endif %}
      -keyout {% if item.key is defined %}{{ item.key }}{% else %}/etc/ssl/private/{{ item.name }}.pem{% endif %}
      -out {% if item.crt is defined %}{{ item.crt}}{% else %}/etc/ssl/certs/{{ item.name }}.crt
      -config /etc/ssl/cnf/{{ item.name }}-openssl.cnf
    creates=/etc/ssl/certs/{{ item.name }}.crt


- name: Copy existing certificates
  tags: ssl-certificates
  with_items: ssl_certificates_copy
  copy:
    src={{ item.src }}
    dest={{ item.dest }}
