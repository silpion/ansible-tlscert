---
- name: Assert platform is supported
  tags: tlscert
  assert:
    that:
      - ansible_os_family in tlscert_supported_platforms

- name: Include OS specific vars
  tags: tlscert
  include: ../../silpion.lib/tasks/os-specific-vars.yml

- name: Template role-internal vars file
  tags: tlscert
  changed_when: false
  always_run: true
  local_action: template
  args:
    src: roleinternal_facts.j2
    dest: "{{ tlscert_localfacts }}"
    mode: '0640'

- name: Include roleinternal vars file
  tags: tlscert
  changed_when: false
  always_run: true
  include_vars: "{{ tlscert_localfacts }}"

- name: Set tlscert_changed
  tags: tlscert
  changed_when: false
  always_run: true
  set_fact:
    tlscert_changed: false

- name: Update apt package cache
  tags: tlscert
  become: true
  when: ansible_os_family == 'Debian'
  apt:
    update_cache: true
    cache_valid_time: 3600


- name: Ensure default directories
  tags: tlscert
  become: true
  with_items:
    - dir: "{{ tlscert_cnf_path }}"
      mode: "{{ tlscert_cnf_path_mode }}"
      owner: "{{ tlscert_cnf_path_owner }}"
      group: "{{ tlscert_cnf_path_group }}"
    - dir: "{{ tlscert_crt_path }}"
      mode: "{{ tlscert_crt_path_mode  }}"
      owner: "{{ tlscert_crt_path_owner }}"
      group: "{{ tlscert_crt_path_group }}"
    - dir: "{{ tlscert_key_path }}"
      mode: "{{ tlscert_key_path_mode }}"
      owner: "{{ tlscert_key_path_owner }}"
      group: "{{ tlscert_key_path_group }}"
  file:
    state: directory
    dest: "{{ item.dir }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"

- name: Install required packages
  tags: tlscert
  become: true
  with_items: "{{ tlscert_package_list }}"
  action: "{{ ansible_pkg_mgr }}"
  args:
    state: installed
    name: "{{ item }}"

- name: Install SSL certificates
  tags: tlscert
  become: true
  notify:
    - Set tlscert_changed true
    - Re-read tlscert facts
  with_items: "{{ tlscert_install }}"
  copy:
    src: "{{ tlscert_install_sourcedirectory }}/{{ item.name|default(item) }}.crt"
    dest: "{{ tlscert_crt_path }}/{{ item.name|default(item) }}.crt"
    owner: 0
    group: 0
    mode: '0644'

- name: Install SSL certificate keys
  tags: tlscert
  become: true
  notify:
    - Set tlscert_changed true
    - Re-read tlscert facts
  with_items: "{{ tlscert_install }}"
  copy:
    src: "{{ tlscert_install_sourcedirectory }}/{{ item.name|default(item) }}.key"
    dest: "{{ tlscert_key_path }}/{{ item.name|default(item) }}.key"
    owner: 0
    group: 0
    mode: '0600'

- name: Create openssl.cnf for certificates
  tags: tlscert
  become: true
  no_log: true
  with_items: "{{ tlscert_localfact_create }}"
  template:
    src: openssl.cnf.j2
    dest: "{{ tlscert_cnf_path }}/{{ item.CN }}-openssl.cnf"

- name: Create self-signed SSL certificates
  tags: tlscert
  become: true
  notify:
    - Set tlscert_changed true
    - Re-read tlscert facts
  with_items: "{{ tlscert_localfact_create }}"
  command:
    openssl req
      -newkey "rsa:{{ item.bits|default(tlscert_openssl_default_bits) }}"
      -nodes
      -x509
      -days {{ item.days|default(tlscert_openssl_default_days) }}
      -keyout {{ item.key|default(tlscert_key_path + "/" + item.CN + ".key") }}
      -out {{ item.crt|default(tlscert_crt_path + "/" + item.CN + ".crt") }}
      -config {{ tlscert_cnf_path }}/{{ item.CN }}-openssl.cnf
    creates={{ tlscert_crt_path }}/{{ item.CN }}.crt

- name: Include localfact tasks
  tags: tlscert
  include: ../../silpion.lib/tasks/localfacts.yml
  vars:
    namespace: tlscert
    file_mode: '4755'
